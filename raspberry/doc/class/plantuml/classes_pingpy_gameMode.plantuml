@startuml classes_pingpy_gameMode
set namespaceSeparator none
class "AtYourCommand" as pingpy.gameMode.atYourCommand.AtYourCommand {
}
class "BattleRoyale" as pingpy.gameMode.battleRoyale.BattleRoyale {
}
class "GameMode" as pingpy.gameMode.gameMode.GameMode {
  descriptionAudioPath : NoneType
  inGame : bool
  {abstract}compute(input, output)
  {abstract}setup(output)
  {abstract}stop(Input)
}
class "LightTracker" as pingpy.gameMode.lightTracker.LightTracker {
  actualRound : int
  areaLed : int, list
  areaLength : int
  color
  count_move : int
  ledCenter : int
  check_distance(Input)
  check_end_move(Input)
  check_move(PlayerInput)
  check_victory(PlayerInput, Output)
  modif_score(PlayerInput)
  move(PlayerInput, PlayerOutput)
  new_round(Input, Output)
  run(Input, Output)
  setup(Input, Output)
  stop(Input, Output)
}
class "MemoChain" as pingpy.gameMode.memoChain.MemoChain {
}
class "PingGame" as pingpy.gameMode.pingGame.PingGame {
  {abstract}run()
  {abstract}stop()
}
class "RedLightGreenLight" as pingpy.gameMode.redLightGreenLight.RedLightGreenLight {
  color : tuple
  descriptionAudioPath : str
  durationGreenLight : NoneType
  durationRedLight : NoneType
  inGame : bool
  isLightGreen : bool
  reactionTime : float
  standby : bool
  timeInit : int
  waitForStart : bool
  can_move(currentTime)
  check_action(playerInput, playerOutput, currentTime)
  check_victory(playerInput, playerOutput)
  compute(Input, Output)
  cycle(currentTime, Output)
  lose(playerOutput)
  makeWin(Output, winnerID)
  randomize_duration(Output)
  setup(Input, Output)
  stop(output_ptr)
  wait_for_start(Input, Output)
}
class "SandBox" as pingpy.gameMode.sandBox.SandBox {
}
class "WaitingRoom" as pingpy.gameMode.waitingRoom.WaitingRoom {
  brightness_blink_rate : float
  color : tuple
  currentColor : tuple
  currentGameMode
  currentLed_brightness : float
  gameModeList
  last_time
  preselectedGameMode : NoneType, int
  preselectedGameModeFlag : bool
  compute(input, output)
  setup(input, output)
  {abstract}stop(output_ptr)
}
pingpy.gameMode.redLightGreenLight.RedLightGreenLight --|> pingpy.gameMode.gameMode.GameMode
pingpy.gameMode.waitingRoom.WaitingRoom --|> pingpy.gameMode.gameMode.GameMode
@enduml
